name: Lint
on: [push, pull_request]

jobs:
  tflint:
    name: TFLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: TFLint
        uses: docker://wata727/tflint

  fmt:
    name: Code Format
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@master
      - run: terraform fmt --recursive -check=true

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.12'
      - name: Install dependencies
        run: |
          pip install pre-commit
          go get github.com/segmentio/terraform-docs
      - name: Terraform init
        uses: hashicorp/terraform-github-actions/init@v0.4.0
      - name: Run pre-commit
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin
          pre-commit run --show-diff-on-failure --all-files

  validate:
    name: Validate
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:latest
    steps:
      - uses: actions/checkout@master
      - name: Validate Code
        env:
          AWS_REGION: 'us-east-1'
          TF_WARN_OUTPUT_ERRORS: 1
        run: |
          terraform init
          terraform validate -var "region=${AWS_REGION}" -var "vpc_id=vpc-123456" -var "subnets=[\"subnet-12345a\"]" -var "workers_ami_id=ami-123456" -var "cluster_ingress_cidrs=[]" -var "cluster_name=test_cluster"
      - name: Validate Examples
        run: |
          for example in $(find examples -maxdepth 1 -mindepth 1 -type d); do
            cd $example
            terraform init
            terraform validate
            cd -
          done
